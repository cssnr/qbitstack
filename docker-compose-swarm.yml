version: '3.9'

services:
  nginx:
    build: ./nginx
    image: registry.hosted-domains.com/shane/qbitstack-nginx:${VERSION}
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.routers.STACK_NAME-http.rule=Host(`${TRAEFIK_HOST}`)"
        - "traefik.http.routers.STACK_NAME-http.entrypoints=http"
        - "traefik.http.routers.STACK_NAME-http.middlewares=https-redirect"
        - "traefik.http.routers.STACK_NAME-https.rule=Host(`${TRAEFIK_HOST}`)"
        - "traefik.http.routers.STACK_NAME-https.entrypoints=https"
        - "traefik.http.routers.STACK_NAME-https.tls=true"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.port=80"
        - "traefik.http.services.STACK_NAME.loadbalancer.server.scheme=http"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - download_dir:/data/downloads
    depends_on:
      - qbittorrent
    networks:
      - traefik-public
      - internal-net

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - WEBUI_PORT=8080
    volumes:
      - config_dir:/config
      - downloads_dir:/downloads
    networks:
      - internal-net
    ports:
      - "${QBIT_PORT}:6881"
      - "${QBIT_PORT}:6881/udp"

volumes:
  config_dir:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${NFS_HOST},rw"
      device: ":${NFS_DIRECTORY}/config"
  downloads_dir:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${NFS_HOST},rw"
      device: ":${NFS_DIRECTORY}/downloads"

networks:
  internal-net:
    driver: overlay
  traefik-public:
    external: true
